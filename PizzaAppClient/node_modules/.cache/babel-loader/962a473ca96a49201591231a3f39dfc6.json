{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\src\\components\\ContainerPizzaChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\src\\components\\ContainerPizzaChart.vue","mtime":1649155419759},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\babel.config.js","mtime":1649053845797},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Admin/source/repos/WebApplication1/PizzaAppClient/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios'; //import { Bar } from 'vue-chartjs'\n//const TOP_N_VOTERS_TO_SHOW_ON_CHART = 10\n//// Used to sort by votes value - from bigger to smaller (desc)\n//function sortByStartDate(nextUser, currentUser) {\n//    const nextVoteValue = nextUser.value\n//    const currentVoteValue = currentUser.value\n//    return currentVoteValue - nextVoteValue\n//}\n//new Vue({\n//    el: '#app',\n//    data() {\n//        return {\n//            info: null\n//        }\n//    },\n//    mounted() {\n//        axios\n//            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n//            .then(response => (this.info = response))\n//    }\n//})\n\nexport default {\n  name: 'ContainerPizzaChart',\n  setup: function setup() {\n    var a = [];\n\n    var getAllData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get('https://localhost:44320/api/pizzavote');\n\n              case 3:\n                res = _context.sent;\n                console.log(res.data);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function getAllData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllData();\n  } //    extends: Bar,\n  //    props: { data: Array },\n  //    watch: {\n  //        data: async function (newVal) {\n  //            const sortedVotes = Array.from(newVal).sort(sortByStartDate).slice(0, TOP_N_VOTERS_TO_SHOW_ON_CHART)\n  //            this.labels = sortedVotes.map(user => user.id)\n  //            this.values = sortedVotes.map(user => user.value)\n  //            this.renderChart({\n  //                labels: this.labels,\n  //                datasets: [\n  //                    {\n  //                        label: 'Pizza Lovers',\n  //                        backgroundColor: '#f87979',\n  //                        data: this.values,\n  //                    }\n  //                ]\n  //            }, {\n  //                scales: {\n  //                    yAxes: [{\n  //                        ticks: {\n  //                            stepSize: 1,\n  //                            min: 0,\n  //                            max: this.values[0]\n  //                        }\n  //                    }]\n  //                }\n  //            })\n  //        }\n  //    }\n\n};",{"version":3,"sources":["ContainerPizzaChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,OAAA,KAAA,MAAA,OAAA,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAA;AAEA,QAAA,qBAFA;AAGA,OAHA,mBAGA;AACA,QAAA,IAAA,EAAA;;AAEA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,GAAA,CAAA,uCAAA,CAFA;;AAAA;AAEA,mBAFA;AAGA,wBAAA,GAAA,CAAA,IAAA,IAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKA,wBAAA,GAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;AAAA,OAAA;;AAQA;AACA,GAfA,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7CA,CAAA","sourcesContent":["<template>\r\n    <!--<ContainerPizzaChart />-->\r\n    <div>\r\n        <h1>aaaaaaaaa</h1>\r\n        <h2>bbbbbbbb</h2>\r\n        <div id=\"app\">\r\n            {{ info }}\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    //import { Bar } from 'vue-chartjs'\r\n    //const TOP_N_VOTERS_TO_SHOW_ON_CHART = 10\r\n    //// Used to sort by votes value - from bigger to smaller (desc)\r\n    //function sortByStartDate(nextUser, currentUser) {\r\n    //    const nextVoteValue = nextUser.value\r\n    //    const currentVoteValue = currentUser.value\r\n    //    return currentVoteValue - nextVoteValue\r\n    //}\r\n\r\n    //new Vue({\r\n    //    el: '#app',\r\n    //    data() {\r\n    //        return {\r\n    //            info: null\r\n    //        }\r\n    //    },\r\n    //    mounted() {\r\n    //        axios\r\n    //            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n    //            .then(response => (this.info = response))\r\n    //    }\r\n    //})\r\n\r\n    export default {\r\n\r\n        name: 'ContainerPizzaChart',\r\n        setup() {\r\n            const a = [];\r\n\r\n            const getAllData = async () => {\r\n                try {\r\n                    const res = await axios.get('https://localhost:44320/api/pizzavote')\r\n                    console.log(res.data)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            };\r\n            getAllData();\r\n        }\r\n\r\n    //    extends: Bar,\r\n    //    props: { data: Array },\r\n    //    watch: {\r\n    //        data: async function (newVal) {\r\n    //            const sortedVotes = Array.from(newVal).sort(sortByStartDate).slice(0, TOP_N_VOTERS_TO_SHOW_ON_CHART)\r\n    //            this.labels = sortedVotes.map(user => user.id)\r\n    //            this.values = sortedVotes.map(user => user.value)\r\n    //            this.renderChart({\r\n    //                labels: this.labels,\r\n    //                datasets: [\r\n    //                    {\r\n    //                        label: 'Pizza Lovers',\r\n    //                        backgroundColor: '#f87979',\r\n    //                        data: this.values,\r\n    //                    }\r\n    //                ]\r\n    //            }, {\r\n    //                scales: {\r\n    //                    yAxes: [{\r\n    //                        ticks: {\r\n    //                            stepSize: 1,\r\n    //                            min: 0,\r\n    //                            max: this.values[0]\r\n    //                        }\r\n    //                    }]\r\n    //                }\r\n    //            })\r\n    //        }\r\n    //    }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}