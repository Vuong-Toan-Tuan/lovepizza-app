{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\src\\components\\ContainerPizzaChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\src\\components\\ContainerPizzaChart.vue","mtime":1649155419759},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\WebApplication1\\PizzaAppClient\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n//import { Bar } from 'vue-chartjs'\n//const TOP_N_VOTERS_TO_SHOW_ON_CHART = 10\n//// Used to sort by votes value - from bigger to smaller (desc)\n//function sortByStartDate(nextUser, currentUser) {\n//    const nextVoteValue = nextUser.value\n//    const currentVoteValue = currentUser.value\n//    return currentVoteValue - nextVoteValue\n//}\n\n//new Vue({\n//    el: '#app',\n//    data() {\n//        return {\n//            info: null\n//        }\n//    },\n//    mounted() {\n//        axios\n//            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n//            .then(response => (this.info = response))\n//    }\n//})\n\nexport default {\n\n    name: 'ContainerPizzaChart',\n    setup() {\n        const a = [];\n\n        const getAllData = async () => {\n            try {\n                const res = await axios.get('https://localhost:44320/api/pizzavote')\n                console.log(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n        };\n        getAllData();\n    }\n\n//    extends: Bar,\n//    props: { data: Array },\n//    watch: {\n//        data: async function (newVal) {\n//            const sortedVotes = Array.from(newVal).sort(sortByStartDate).slice(0, TOP_N_VOTERS_TO_SHOW_ON_CHART)\n//            this.labels = sortedVotes.map(user => user.id)\n//            this.values = sortedVotes.map(user => user.value)\n//            this.renderChart({\n//                labels: this.labels,\n//                datasets: [\n//                    {\n//                        label: 'Pizza Lovers',\n//                        backgroundColor: '#f87979',\n//                        data: this.values,\n//                    }\n//                ]\n//            }, {\n//                scales: {\n//                    yAxes: [{\n//                        ticks: {\n//                            stepSize: 1,\n//                            min: 0,\n//                            max: this.values[0]\n//                        }\n//                    }]\n//                }\n//            })\n//        }\n//    }\n}\n\n",{"version":3,"sources":["ContainerPizzaChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContainerPizzaChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <!--<ContainerPizzaChart />-->\r\n    <div>\r\n        <h1>aaaaaaaaa</h1>\r\n        <h2>bbbbbbbb</h2>\r\n        <div id=\"app\">\r\n            {{ info }}\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    //import { Bar } from 'vue-chartjs'\r\n    //const TOP_N_VOTERS_TO_SHOW_ON_CHART = 10\r\n    //// Used to sort by votes value - from bigger to smaller (desc)\r\n    //function sortByStartDate(nextUser, currentUser) {\r\n    //    const nextVoteValue = nextUser.value\r\n    //    const currentVoteValue = currentUser.value\r\n    //    return currentVoteValue - nextVoteValue\r\n    //}\r\n\r\n    //new Vue({\r\n    //    el: '#app',\r\n    //    data() {\r\n    //        return {\r\n    //            info: null\r\n    //        }\r\n    //    },\r\n    //    mounted() {\r\n    //        axios\r\n    //            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n    //            .then(response => (this.info = response))\r\n    //    }\r\n    //})\r\n\r\n    export default {\r\n\r\n        name: 'ContainerPizzaChart',\r\n        setup() {\r\n            const a = [];\r\n\r\n            const getAllData = async () => {\r\n                try {\r\n                    const res = await axios.get('https://localhost:44320/api/pizzavote')\r\n                    console.log(res.data)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            };\r\n            getAllData();\r\n        }\r\n\r\n    //    extends: Bar,\r\n    //    props: { data: Array },\r\n    //    watch: {\r\n    //        data: async function (newVal) {\r\n    //            const sortedVotes = Array.from(newVal).sort(sortByStartDate).slice(0, TOP_N_VOTERS_TO_SHOW_ON_CHART)\r\n    //            this.labels = sortedVotes.map(user => user.id)\r\n    //            this.values = sortedVotes.map(user => user.value)\r\n    //            this.renderChart({\r\n    //                labels: this.labels,\r\n    //                datasets: [\r\n    //                    {\r\n    //                        label: 'Pizza Lovers',\r\n    //                        backgroundColor: '#f87979',\r\n    //                        data: this.values,\r\n    //                    }\r\n    //                ]\r\n    //            }, {\r\n    //                scales: {\r\n    //                    yAxes: [{\r\n    //                        ticks: {\r\n    //                            stepSize: 1,\r\n    //                            min: 0,\r\n    //                            max: this.values[0]\r\n    //                        }\r\n    //                    }]\r\n    //                }\r\n    //            })\r\n    //        }\r\n    //    }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}